name: Validate Team Structure

on:
  pull_request:
    paths:
      - 'teams/**'
      - '.github/workflows/validate_teams.yml'

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set GitHub Actor Env
        run: echo "GITHUB_ACTOR=${{ github.actor }}" >> $GITHUB_ENV

      - name: Check if teams/ exists in base branch
        id: team_folder_check
        run: |
          echo "üîé Checking if teams/ folder exists in base branch..."
          git fetch origin ${{ github.base_ref }}
          if git ls-tree -d origin/${{ github.base_ref }} teams/ | grep teams/; then
            echo "TEAMS_EXISTS=true" >> $GITHUB_ENV
            echo "‚úÖ teams/ exists in base branch"
          else
            echo "TEAMS_EXISTS=false" >> $GITHUB_ENV
            echo "‚ö†Ô∏è teams/ does not exist in base branch"
          fi

      - name: Validate Folder Naming
        id: naming
        if: env.TEAMS_EXISTS == 'true'
        run: |
          echo "üîç Checking folder names..."
          INVALID_DIRS=$(find teams/ -maxdepth 1 -mindepth 1 -type d ! -name '_meta' ! -regex '\./teams/Team[0-9]\+_[A-Za-z0-9_]\+_20[0-9]\{2\}')

          if [ -n "$INVALID_DIRS" ]; then
            echo "::error::Invalid team folder names found:"
            echo "$INVALID_DIRS" | while read dir; do
              echo "::error:: - $dir (should match TeamName_ProjectName_Year, e.g., Team10_SensEdge_2023)"
            done

            if [ "$GITHUB_ACTOR" != "CSE-Alpha-2022-26" ]; then
              exit 1
            else
              echo "‚ö†Ô∏è Skipping folder name error for repo owner"
            fi
          else
            echo "‚úÖ All team folders are valid"
          fi

      - name: Check Required Files
        id: files
        if: env.TEAMS_EXISTS == 'true'
        run: |
          echo "üìù Checking required files in team folders..."
          MISSING_FILES=0

          for dir in teams/*/; do
            if [ "$(basename "$dir")" = "_meta" ]; then
              continue
            fi

            echo "üìÇ Checking $dir"

            if [ ! -f "${dir}README.md" ]; then
              echo "::error::Missing README.md in $dir"
              MISSING_FILES=1
            else
              README_LINES=$(wc -l < "${dir}README.md")
              if [ "$README_LINES" -lt 15 ]; then
                echo "::warning::README in $dir seems too short ($README_LINES lines)"
              fi
            fi

            if [ ! -f "${dir}report.pdf" ] && [ ! -f "${dir}report.md" ]; then
              echo "::warning::No report found in $dir (expected report.pdf or report.md)"
            fi
          done

          if [ "$MISSING_FILES" -eq 1 ]; then
            if [ "$GITHUB_ACTOR" != "CSE-Alpha-2022-26" ]; then
              exit 1
            else
              echo "‚ö†Ô∏è Skipping missing README error for repo owner"
            fi
          fi

      - name: Validate src/ and docs/ structure
        if: always()
        run: |
          echo "üìÅ Validating presence of src/ and docs/ folders..."
          for dir in teams/*/; do
            if [ "$(basename "$dir")" = "_meta" ]; then
              continue
            fi

            echo "üîç Checking structure in $dir"

            [ -d "${dir}src/" ] || echo "::warning::Missing src/ directory in $dir"
            [ -d "${dir}docs/" ] || echo "::warning::Missing docs/ directory in $dir"
